// Указываем версию солидити для компилятора


//Объявляем контракт


    // Объявляем переменную donator, в которой будет содержаться значение типа Адрес
    // Public означает, что значение этой переменной будет видно всем

    // Объявляем переменную owner, в которой будет содержаться значение типа Адрес


    // Объявляем переменную value, в которой будет содержаться значение типа uint


    // Объявляем переменную lastTimeForDonate, в которой будет содержаться значение типа uint

    // Объявляем переменную lastTimeForValue, в которой будет содержаться значение типа uint

    // Объявляем переменную timeOut, в которой будет содержаться заранее определенное значение типа uint


    // Эта функция выполнится в момент инициализации контракта

        // Присваиваем функции donator значение адреса того, кто отправил эфиры



    // Функция для приема эфиров
    // Отсутвие названия говорит о том, что эта функция будет вызвана в момент,
    // когда на адрес контракта переводятся деньги
    // payable - модификатор который означает, что вместе с вызовом функции могут передаваться эфиры

        // Проверяем, что достаточное количество средств переведено

        // Проверяем, что выполнено условие по времени

        // Вызываем внутреннюю функцию


    // Функция для приема эфиров и установки значения
    // Функция принимает переменную _value в формате uint
    // payable - модификатор который означает, что вместе с вызовом функции могут передаваться эфиры

        // Проверяем, что достаточное количество средств переведено

        // Проверяем, что выполнено условие по времени

        // Вызываем внутреннюю функцию


    // Функция установки нового значения
    // internal означает, что эта функция недоступна для вызова вне контракта
    // (uint _value) означает, что функция принимает значение типа uint, которое потом будет
    // доступно по имени _value

        // Присваиваем переменной value значение адреса, находящегося в переменной _value



    // Функция для установки нового donator
    // internal означает, что эта функция недоступна для вызова вне контракта
    // (address _donator) означает, что функция принимает значение типа адрес, которое потом будет
    // доступно по имени _donator

        // Присваиваем переменной donator значение адреса, находящегося в переменной _donator